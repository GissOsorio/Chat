//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Administración.Administrar {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Administrar.IAdministrar")]
    public interface IAdministrar {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/buscarFilaPorPattern", ReplyAction="http://tempuri.org/IAdministrar/buscarFilaPorPatternResponse")]
        int buscarFilaPorPattern(string pattern);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/buscarFilaPorPattern", ReplyAction="http://tempuri.org/IAdministrar/buscarFilaPorPatternResponse")]
        System.Threading.Tasks.Task<int> buscarFilaPorPatternAsync(string pattern);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/insertarConocimiento", ReplyAction="http://tempuri.org/IAdministrar/insertarConocimientoResponse")]
        int insertarConocimiento(Datos.Conocimiento conocimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/insertarConocimiento", ReplyAction="http://tempuri.org/IAdministrar/insertarConocimientoResponse")]
        System.Threading.Tasks.Task<int> insertarConocimientoAsync(Datos.Conocimiento conocimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/eliminarConocimiento", ReplyAction="http://tempuri.org/IAdministrar/eliminarConocimientoResponse")]
        int eliminarConocimiento(int numero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/eliminarConocimiento", ReplyAction="http://tempuri.org/IAdministrar/eliminarConocimientoResponse")]
        System.Threading.Tasks.Task<int> eliminarConocimientoAsync(int numero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/buscarPalabrasClave", ReplyAction="http://tempuri.org/IAdministrar/buscarPalabrasClaveResponse")]
        Datos.Conocimiento[] buscarPalabrasClave();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/buscarPalabrasClave", ReplyAction="http://tempuri.org/IAdministrar/buscarPalabrasClaveResponse")]
        System.Threading.Tasks.Task<Datos.Conocimiento[]> buscarPalabrasClaveAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/buscarPalabraClavePorConocimiento", ReplyAction="http://tempuri.org/IAdministrar/buscarPalabraClavePorConocimientoResponse")]
        Datos.Conocimiento buscarPalabraClavePorConocimiento(int idConocimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/buscarPalabraClavePorConocimiento", ReplyAction="http://tempuri.org/IAdministrar/buscarPalabraClavePorConocimientoResponse")]
        System.Threading.Tasks.Task<Datos.Conocimiento> buscarPalabraClavePorConocimientoAsync(int idConocimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/insertarConocimientoTemplate", ReplyAction="http://tempuri.org/IAdministrar/insertarConocimientoTemplateResponse")]
        int insertarConocimientoTemplate(Datos.ConocimientoTemplate conocimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/insertarConocimientoTemplate", ReplyAction="http://tempuri.org/IAdministrar/insertarConocimientoTemplateResponse")]
        System.Threading.Tasks.Task<int> insertarConocimientoTemplateAsync(Datos.ConocimientoTemplate conocimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/eliminarConocimientoTemplate", ReplyAction="http://tempuri.org/IAdministrar/eliminarConocimientoTemplateResponse")]
        int eliminarConocimientoTemplate(int numero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/eliminarConocimientoTemplate", ReplyAction="http://tempuri.org/IAdministrar/eliminarConocimientoTemplateResponse")]
        System.Threading.Tasks.Task<int> eliminarConocimientoTemplateAsync(int numero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/buscarFilaPorConocimiento", ReplyAction="http://tempuri.org/IAdministrar/buscarFilaPorConocimientoResponse")]
        Datos.ConocimientoTemplate buscarFilaPorConocimiento(int idConocimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/buscarFilaPorConocimiento", ReplyAction="http://tempuri.org/IAdministrar/buscarFilaPorConocimientoResponse")]
        System.Threading.Tasks.Task<Datos.ConocimientoTemplate> buscarFilaPorConocimientoAsync(int idConocimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/buscarFilaPorTemplate", ReplyAction="http://tempuri.org/IAdministrar/buscarFilaPorTemplateResponse")]
        Datos.ConocimientoTemplate buscarFilaPorTemplate(int idTemplate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/buscarFilaPorTemplate", ReplyAction="http://tempuri.org/IAdministrar/buscarFilaPorTemplateResponse")]
        System.Threading.Tasks.Task<Datos.ConocimientoTemplate> buscarFilaPorTemplateAsync(int idTemplate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/modificarTemplateProfesor", ReplyAction="http://tempuri.org/IAdministrar/modificarTemplateProfesorResponse")]
        int modificarTemplateProfesor(Datos.Template template, int idSemestre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/modificarTemplateProfesor", ReplyAction="http://tempuri.org/IAdministrar/modificarTemplateProfesorResponse")]
        System.Threading.Tasks.Task<int> modificarTemplateProfesorAsync(Datos.Template template, int idSemestre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/buscarFilaPorId", ReplyAction="http://tempuri.org/IAdministrar/buscarFilaPorIdResponse")]
        Datos.Template buscarFilaPorId(int id, int idSemestre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/buscarFilaPorId", ReplyAction="http://tempuri.org/IAdministrar/buscarFilaPorIdResponse")]
        System.Threading.Tasks.Task<Datos.Template> buscarFilaPorIdAsync(int id, int idSemestre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/listaTemplatesTopic", ReplyAction="http://tempuri.org/IAdministrar/listaTemplatesTopicResponse")]
        Datos.Template[] listaTemplatesTopic(int id, int idSemestre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/listaTemplatesTopic", ReplyAction="http://tempuri.org/IAdministrar/listaTemplatesTopicResponse")]
        System.Threading.Tasks.Task<Datos.Template[]> listaTemplatesTopicAsync(int id, int idSemestre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/insertarTemplate", ReplyAction="http://tempuri.org/IAdministrar/insertarTemplateResponse")]
        int insertarTemplate(Datos.Template template, int idSemestre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/insertarTemplate", ReplyAction="http://tempuri.org/IAdministrar/insertarTemplateResponse")]
        System.Threading.Tasks.Task<int> insertarTemplateAsync(Datos.Template template, int idSemestre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/modificarTemplate", ReplyAction="http://tempuri.org/IAdministrar/modificarTemplateResponse")]
        int modificarTemplate(Datos.Template template, int idSemestre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/modificarTemplate", ReplyAction="http://tempuri.org/IAdministrar/modificarTemplateResponse")]
        System.Threading.Tasks.Task<int> modificarTemplateAsync(Datos.Template template, int idSemestre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/eliminarTemplate", ReplyAction="http://tempuri.org/IAdministrar/eliminarTemplateResponse")]
        int eliminarTemplate(int id, int idSemestre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/eliminarTemplate", ReplyAction="http://tempuri.org/IAdministrar/eliminarTemplateResponse")]
        System.Threading.Tasks.Task<int> eliminarTemplateAsync(int id, int idSemestre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/listaTodoslosTemplates", ReplyAction="http://tempuri.org/IAdministrar/listaTodoslosTemplatesResponse")]
        Datos.Template[] listaTodoslosTemplates(int id, int nuevoSemestre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/listaTodoslosTemplates", ReplyAction="http://tempuri.org/IAdministrar/listaTodoslosTemplatesResponse")]
        System.Threading.Tasks.Task<Datos.Template[]> listaTodoslosTemplatesAsync(int id, int nuevoSemestre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/insertarListaTemplates", ReplyAction="http://tempuri.org/IAdministrar/insertarListaTemplatesResponse")]
        int insertarListaTemplates(Datos.Template templates);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/insertarListaTemplates", ReplyAction="http://tempuri.org/IAdministrar/insertarListaTemplatesResponse")]
        System.Threading.Tasks.Task<int> insertarListaTemplatesAsync(Datos.Template templates);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/todoslosSemestres", ReplyAction="http://tempuri.org/IAdministrar/todoslosSemestresResponse")]
        Datos.Semestre[] todoslosSemestres();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/todoslosSemestres", ReplyAction="http://tempuri.org/IAdministrar/todoslosSemestresResponse")]
        System.Threading.Tasks.Task<Datos.Semestre[]> todoslosSemestresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/seleccionarSemestreTexto", ReplyAction="http://tempuri.org/IAdministrar/seleccionarSemestreTextoResponse")]
        Datos.Semestre seleccionarSemestreTexto(string texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/seleccionarSemestreTexto", ReplyAction="http://tempuri.org/IAdministrar/seleccionarSemestreTextoResponse")]
        System.Threading.Tasks.Task<Datos.Semestre> seleccionarSemestreTextoAsync(string texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/semestreSeleccionado", ReplyAction="http://tempuri.org/IAdministrar/semestreSeleccionadoResponse")]
        int semestreSeleccionado(int idAnterior, int idNuevo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/semestreSeleccionado", ReplyAction="http://tempuri.org/IAdministrar/semestreSeleccionadoResponse")]
        System.Threading.Tasks.Task<int> semestreSeleccionadoAsync(int idAnterior, int idNuevo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/insertarSemestre", ReplyAction="http://tempuri.org/IAdministrar/insertarSemestreResponse")]
        int insertarSemestre();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrar/insertarSemestre", ReplyAction="http://tempuri.org/IAdministrar/insertarSemestreResponse")]
        System.Threading.Tasks.Task<int> insertarSemestreAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdministrarChannel : Administración.Administrar.IAdministrar, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdministrarClient : System.ServiceModel.ClientBase<Administración.Administrar.IAdministrar>, Administración.Administrar.IAdministrar {
        
        public AdministrarClient() {
        }
        
        public AdministrarClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdministrarClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdministrarClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdministrarClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int buscarFilaPorPattern(string pattern) {
            return base.Channel.buscarFilaPorPattern(pattern);
        }
        
        public System.Threading.Tasks.Task<int> buscarFilaPorPatternAsync(string pattern) {
            return base.Channel.buscarFilaPorPatternAsync(pattern);
        }
        
        public int insertarConocimiento(Datos.Conocimiento conocimiento) {
            return base.Channel.insertarConocimiento(conocimiento);
        }
        
        public System.Threading.Tasks.Task<int> insertarConocimientoAsync(Datos.Conocimiento conocimiento) {
            return base.Channel.insertarConocimientoAsync(conocimiento);
        }
        
        public int eliminarConocimiento(int numero) {
            return base.Channel.eliminarConocimiento(numero);
        }
        
        public System.Threading.Tasks.Task<int> eliminarConocimientoAsync(int numero) {
            return base.Channel.eliminarConocimientoAsync(numero);
        }
        
        public Datos.Conocimiento[] buscarPalabrasClave() {
            return base.Channel.buscarPalabrasClave();
        }
        
        public System.Threading.Tasks.Task<Datos.Conocimiento[]> buscarPalabrasClaveAsync() {
            return base.Channel.buscarPalabrasClaveAsync();
        }
        
        public Datos.Conocimiento buscarPalabraClavePorConocimiento(int idConocimiento) {
            return base.Channel.buscarPalabraClavePorConocimiento(idConocimiento);
        }
        
        public System.Threading.Tasks.Task<Datos.Conocimiento> buscarPalabraClavePorConocimientoAsync(int idConocimiento) {
            return base.Channel.buscarPalabraClavePorConocimientoAsync(idConocimiento);
        }
        
        public int insertarConocimientoTemplate(Datos.ConocimientoTemplate conocimiento) {
            return base.Channel.insertarConocimientoTemplate(conocimiento);
        }
        
        public System.Threading.Tasks.Task<int> insertarConocimientoTemplateAsync(Datos.ConocimientoTemplate conocimiento) {
            return base.Channel.insertarConocimientoTemplateAsync(conocimiento);
        }
        
        public int eliminarConocimientoTemplate(int numero) {
            return base.Channel.eliminarConocimientoTemplate(numero);
        }
        
        public System.Threading.Tasks.Task<int> eliminarConocimientoTemplateAsync(int numero) {
            return base.Channel.eliminarConocimientoTemplateAsync(numero);
        }
        
        public Datos.ConocimientoTemplate buscarFilaPorConocimiento(int idConocimiento) {
            return base.Channel.buscarFilaPorConocimiento(idConocimiento);
        }
        
        public System.Threading.Tasks.Task<Datos.ConocimientoTemplate> buscarFilaPorConocimientoAsync(int idConocimiento) {
            return base.Channel.buscarFilaPorConocimientoAsync(idConocimiento);
        }
        
        public Datos.ConocimientoTemplate buscarFilaPorTemplate(int idTemplate) {
            return base.Channel.buscarFilaPorTemplate(idTemplate);
        }
        
        public System.Threading.Tasks.Task<Datos.ConocimientoTemplate> buscarFilaPorTemplateAsync(int idTemplate) {
            return base.Channel.buscarFilaPorTemplateAsync(idTemplate);
        }
        
        public int modificarTemplateProfesor(Datos.Template template, int idSemestre) {
            return base.Channel.modificarTemplateProfesor(template, idSemestre);
        }
        
        public System.Threading.Tasks.Task<int> modificarTemplateProfesorAsync(Datos.Template template, int idSemestre) {
            return base.Channel.modificarTemplateProfesorAsync(template, idSemestre);
        }
        
        public Datos.Template buscarFilaPorId(int id, int idSemestre) {
            return base.Channel.buscarFilaPorId(id, idSemestre);
        }
        
        public System.Threading.Tasks.Task<Datos.Template> buscarFilaPorIdAsync(int id, int idSemestre) {
            return base.Channel.buscarFilaPorIdAsync(id, idSemestre);
        }
        
        public Datos.Template[] listaTemplatesTopic(int id, int idSemestre) {
            return base.Channel.listaTemplatesTopic(id, idSemestre);
        }
        
        public System.Threading.Tasks.Task<Datos.Template[]> listaTemplatesTopicAsync(int id, int idSemestre) {
            return base.Channel.listaTemplatesTopicAsync(id, idSemestre);
        }
        
        public int insertarTemplate(Datos.Template template, int idSemestre) {
            return base.Channel.insertarTemplate(template, idSemestre);
        }
        
        public System.Threading.Tasks.Task<int> insertarTemplateAsync(Datos.Template template, int idSemestre) {
            return base.Channel.insertarTemplateAsync(template, idSemestre);
        }
        
        public int modificarTemplate(Datos.Template template, int idSemestre) {
            return base.Channel.modificarTemplate(template, idSemestre);
        }
        
        public System.Threading.Tasks.Task<int> modificarTemplateAsync(Datos.Template template, int idSemestre) {
            return base.Channel.modificarTemplateAsync(template, idSemestre);
        }
        
        public int eliminarTemplate(int id, int idSemestre) {
            return base.Channel.eliminarTemplate(id, idSemestre);
        }
        
        public System.Threading.Tasks.Task<int> eliminarTemplateAsync(int id, int idSemestre) {
            return base.Channel.eliminarTemplateAsync(id, idSemestre);
        }
        
        public Datos.Template[] listaTodoslosTemplates(int id, int nuevoSemestre) {
            return base.Channel.listaTodoslosTemplates(id, nuevoSemestre);
        }
        
        public System.Threading.Tasks.Task<Datos.Template[]> listaTodoslosTemplatesAsync(int id, int nuevoSemestre) {
            return base.Channel.listaTodoslosTemplatesAsync(id, nuevoSemestre);
        }
        
        public int insertarListaTemplates(Datos.Template templates) {
            return base.Channel.insertarListaTemplates(templates);
        }
        
        public System.Threading.Tasks.Task<int> insertarListaTemplatesAsync(Datos.Template templates) {
            return base.Channel.insertarListaTemplatesAsync(templates);
        }
        
        public Datos.Semestre[] todoslosSemestres() {
            return base.Channel.todoslosSemestres();
        }
        
        public System.Threading.Tasks.Task<Datos.Semestre[]> todoslosSemestresAsync() {
            return base.Channel.todoslosSemestresAsync();
        }
        
        public Datos.Semestre seleccionarSemestreTexto(string texto) {
            return base.Channel.seleccionarSemestreTexto(texto);
        }
        
        public System.Threading.Tasks.Task<Datos.Semestre> seleccionarSemestreTextoAsync(string texto) {
            return base.Channel.seleccionarSemestreTextoAsync(texto);
        }
        
        public int semestreSeleccionado(int idAnterior, int idNuevo) {
            return base.Channel.semestreSeleccionado(idAnterior, idNuevo);
        }
        
        public System.Threading.Tasks.Task<int> semestreSeleccionadoAsync(int idAnterior, int idNuevo) {
            return base.Channel.semestreSeleccionadoAsync(idAnterior, idNuevo);
        }
        
        public int insertarSemestre() {
            return base.Channel.insertarSemestre();
        }
        
        public System.Threading.Tasks.Task<int> insertarSemestreAsync() {
            return base.Channel.insertarSemestreAsync();
        }
    }
}
